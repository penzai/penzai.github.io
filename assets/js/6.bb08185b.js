(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{204:function(t,a,s){t.exports=s.p+"assets/img/tcp_header.7b3f75c6.jpg"},218:function(t,a,s){"use strict";s.r(a);var e=s(28),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"web-与网络"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#web-与网络"}},[t._v("#")]),t._v(" Web 与网络")]),t._v(" "),e("h2",{attrs:{id:"小知识"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小知识"}},[t._v("#")]),t._v(" 小知识")]),t._v(" "),e("h3",{attrs:{id:"术语缩写"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#术语缩写"}},[t._v("#")]),t._v(" 术语缩写")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("WWW")]),t._v(" (Word Wide Web) 万维网")]),t._v(" "),e("li",[e("code",[t._v("AJAX")]),t._v(" (Asynchronous JavaScript and XML) 异步 JavaScript 与 XML 技术")]),t._v(" "),e("li",[e("code",[t._v("URI")]),t._v(" (Uniform Resource Identifier) 统一资源标识符")]),t._v(" "),e("li",[e("code",[t._v("URL")]),t._v(" (Uniform Resource Locator) 统一资源定位符")]),t._v(" "),e("li",[e("code",[t._v("HTML")]),t._v(" (HyperText Markup Language) 超文本标记语言")]),t._v(" "),e("li",[e("code",[t._v("HTTP")]),t._v(" (HyperText Transfer Protocol) 超文本状态转移协议")]),t._v(" "),e("li",[e("code",[t._v("FTP")]),t._v(" (File Transfer Protocol) 文件传输协议")]),t._v(" "),e("li",[e("code",[t._v("DNS")]),t._v(" (Domain Name System) 域名系统")]),t._v(" "),e("li",[e("code",[t._v("TCP")]),t._v(" (Transmission Control Protocol) 传输控制协议")]),t._v(" "),e("li",[e("code",[t._v("SYN")]),t._v(" (Synchronize Sequence Numbers) 同步序列编号")]),t._v(" "),e("li",[e("code",[t._v("ACK")]),t._v(" (Acknowledgement) 确认字符")]),t._v(" "),e("li",[e("code",[t._v("UDP")]),t._v(" (User Data Protocol) 用户数据报协议")]),t._v(" "),e("li",[e("code",[t._v("MAC")]),t._v(" (Media Access Control Address) 网卡固定地址")]),t._v(" "),e("li",[e("code",[t._v("ARP")]),t._v(" (Address Resolution Protocol) 解析地址的协议（根据通信方的 IP 地址反查出对应的 MAC 地址）")]),t._v(" "),e("li",[e("code",[t._v("REST")]),t._v(" (Representational State Transfer) 表征状态转移")]),t._v(" "),e("li",[e("code",[t._v("SSL")]),t._v(" (Secure Sockets Layer) 安全套接层")]),t._v(" "),e("li",[e("code",[t._v("TLS")]),t._v(" (Transport Layer Security) 传输层安全")]),t._v(" "),e("li",[e("code",[t._v("Dos")]),t._v(" (Denial of Service) 拒绝服务攻击")]),t._v(" "),e("li",[e("code",[t._v("CDN")]),t._v(" (Content Delivery Network) 内容分发网络")]),t._v(" "),e("li",[e("code",[t._v("SSO")]),t._v(" (Single Sign On) 单点登录")]),t._v(" "),e("li",[e("code",[t._v("CAS")]),t._v(" (Central Authentication Service) 中央认证服务")]),t._v(" "),e("li",[e("code",[t._v("CORS")]),t._v(" (cross-origin resource-sharing) 跨域资源共享标准")])]),t._v(" "),e("h3",{attrs:{id:"容量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#容量"}},[t._v("#")]),t._v(" 容量")]),t._v(" "),e("p",[t._v("1 字节（Byte）= 8 比特（bit)（也就是位）")]),t._v(" "),e("p",[t._v("1KB = 1000Byte")]),t._v(" "),e("p",[t._v("1KiB = 1024Byte")]),t._v(" "),e("h3",{attrs:{id:"编码与解码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#编码与解码"}},[t._v("#")]),t._v(" 编码与解码")]),t._v(" "),e("p",[e("code",[t._v("encodeURI")]),t._v("、"),e("code",[t._v("decodeURI")]),t._v("、"),e("code",[t._v("encodeURIComponent")]),t._v("、"),e("code",[t._v("decodeURIComponent")])]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("encodeURI")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://www.baidu.com/My First"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("encodeURIComponent")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://www.baidu.com/My First"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// http://www.baidu.com/My%20First")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// http%3A%2F%2Fwww.baidu.com%2FMy%20First")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("decodeURI")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://www.baidu.com/My%20First"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("decodeURIComponent")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http%3A%2F%2Fwww.baidu.com%2FMy%20First"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h2",{attrs:{id:"htpp2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#htpp2"}},[t._v("#")]),t._v(" HTPP2")]),t._v(" "),e("ul",[e("li",[t._v("二进制传输")]),t._v(" "),e("li",[t._v("多路复用，")]),t._v(" "),e("li",[t._v("header 压缩，双方还会 cache 一份 header 数据")]),t._v(" "),e("li",[t._v("服务端推送")])]),t._v(" "),e("h2",{attrs:{id:"渲染"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#渲染"}},[t._v("#")]),t._v(" 渲染")]),t._v(" "),e("ul",[e("li",[t._v("script 会阻塞渲染")]),t._v(" "),e("li",[t._v("link 在没有 script 的情况下不会阻塞渲染，有 script 的情况下会阻塞")]),t._v(" "),e("li",[t._v("两种标签均可设置异步避免阻塞，script 使用 defer/sync，link 使用"),e("code",[t._v('media="print"')]),t._v("。\n"),e("blockquote",[e("p",[t._v("async 加载后立即执行，没有顺序可言。script 按顺序异步加载，所以比 async 慢。")])])])]),t._v(" "),e("h2",{attrs:{id:"事件模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事件模型"}},[t._v("#")]),t._v(" 事件模型")]),t._v(" "),e("h3",{attrs:{id:"dom-事件模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dom-事件模型"}},[t._v("#")]),t._v(" DOM 事件模型")]),t._v(" "),e("p",[t._v("xxx.onclick，发生在冒泡阶段")]),t._v(" "),e("h3",{attrs:{id:"dom-2-级模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dom-2-级模型"}},[t._v("#")]),t._v(" DOM 2 级模型")]),t._v(" "),e("ul",[e("li",[t._v("捕获，目标，冒泡三个阶段")]),t._v(" "),e("li",[t._v("e.currentTarget 指向注册事件的监 DOM 对象，e.target 指向事件发生的 DOM 对象")]),t._v(" "),e("li",[t._v("this 指向指向注册事件的监听 DOM 对象")])]),t._v(" "),e("p",[t._v("事件委托：")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("delegate")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("delegateEl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" type"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" wannaBindElSelectorString"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fn")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  delegateEl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" el "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("el"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("matches")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("wannaBindElSelectorString"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("el "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" delegateEl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        el "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      el "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" el"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parentNode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    el "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("delegateEl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" delegateEl"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("h2",{attrs:{id:"ajax"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ajax"}},[t._v("#")]),t._v(" AJAX")]),t._v(" "),e("h3",{attrs:{id:"get-与-post"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#get-与-post"}},[t._v("#")]),t._v(" get 与 post")]),t._v(" "),e("p",[t._v("本质上都是万维网中传输数据的一种协议，所有的区别都来自于浏览器或者规范的限制。")]),t._v(" "),e("ul",[e("li",[t._v("语义不同")]),t._v(" "),e("li",[t._v("浏览器限制"),e("code",[t._v("url")]),t._v("长度 2k 左右 -> get 请求有长度限制")]),t._v(" "),e("li",[t._v("不同服务器对 get 中的 request body 处理方式不同，所以 body 里面的信息不一定会被识别 -> get 请求使用 url 进行透明传参")])]),t._v(" "),e("h2",{attrs:{id:"图片"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#图片"}},[t._v("#")]),t._v(" 图片")]),t._v(" "),e("h3",{attrs:{id:"优化手段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#优化手段"}},[t._v("#")]),t._v(" 优化手段")]),t._v(" "),e("ul",[e("li",[t._v("webpack 压缩，并开启渐进效果提升体验。")]),t._v(" "),e("li",[t._v("按需加载。使用 IntersectionObserver 可监听元素进入视野内，使用 chrome 特有的 loading 属性。")]),t._v(" "),e("li",[t._v("固定图片设置背景渐变色，用工具获取色值。")]),t._v(" "),e("li",[t._v("retina 屏幕，img 标签使用 srcset 属性。")]),t._v(" "),e("li",[t._v("webP。使用 picture 标签加载多种格式图片来兼容处理，.webp 排第一位。也可以使用 cdn 判断。")])]),t._v(" "),e("h3",{attrs:{id:"懒加载图片"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#懒加载图片"}},[t._v("#")]),t._v(" 懒加载图片")]),t._v(" "),e("p",[t._v("实现原理：元素的 offsetTop < 页面的 scrollTop + 页面的 clientHeight")]),t._v(" "),e("p",[t._v("元素 offsetTop 的获取：")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getH")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("el")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" h "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("el"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    h "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" el"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetTop"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    el "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" el"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetParent"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" h"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"从-url-输入开始"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#从-url-输入开始"}},[t._v("#")]),t._v(" 从 URL 输入开始")]),t._v(" "),e("h3",{attrs:{id:"_1-dns-解析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-dns-解析"}},[t._v("#")]),t._v(" 1. dns 解析")]),t._v(" "),e("p",[t._v("通过域名找寻 ip 地址")]),t._v(" "),e("h4",{attrs:{id:"顺序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#顺序"}},[t._v("#")]),t._v(" 顺序")]),t._v(" "),e("ol",[e("li",[t._v("浏览器缓存")]),t._v(" "),e("li",[t._v("系统缓存")]),t._v(" "),e("li",[t._v("host 文件")]),t._v(" "),e("li",[t._v("LocalDNS 服务器")])]),t._v(" "),e("ul",[e("li",[t._v("a. 请求根域名服务器（RootDNS），得到主域名服务器（ gTLDServer）地址")]),t._v(" "),e("li",[t._v("b. 请求主域名服务器（ gTLDServer），如 .com、 .cn、. org 等，得到域名提供商服务器地址（NameServer）")]),t._v(" "),e("li",[t._v("c. 请求域名提供商服务器地址（NameServer），如"),e("code",[t._v("xxx.com")]),t._v("，至此获得 IP 和 TTL 值\n"),e("blockquote",[e("p",[t._v("dns 缓存存在多级，例如浏览器缓存、系统缓存、路由器缓存、IPS 服务器缓存、根域名服务器缓存、顶级域名服务器缓存、主域名服务器缓存。")])])])]),t._v(" "),e("h4",{attrs:{id:"优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#优化"}},[t._v("#")]),t._v(" 优化")]),t._v(" "),e("ul",[e("li",[t._v("减少 DNS 的请求次数")]),t._v(" "),e("li",[t._v("DNS 预解析"),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("http-equiv")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("x-dns-prefetch-control"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("on"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("link")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("rel")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("dns-prefetch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("href")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("//example.com"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n")])])])]),t._v(" "),e("li",[t._v("CDN，通过在现有的 Internet 中增加一层新的 CACHE(缓存)层，将网站的内容发布到最接近用户的网络”边缘“的节点")]),t._v(" "),e("li",[t._v("HTTPDNS，使用 HTTP 协议替代 UDP 协议，绕过 LocalDNS，可以有效防止域名劫持")]),t._v(" "),e("li",[t._v("DNS 负载均衡（根据权重轮询返回不同的服务器地址）")])]),t._v(" "),e("h3",{attrs:{id:"_2-查询缓存决定是否发送-http-请求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-查询缓存决定是否发送-http-请求"}},[t._v("#")]),t._v(" 2. 查询缓存决定是否发送 HTTP 请求")]),t._v(" "),e("h4",{attrs:{id:"强缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#强缓存"}},[t._v("#")]),t._v(" 强缓存")]),t._v(" "),e("p",[t._v("服务端通过 cache-control(1.1)(max-age=毫秒)和 expires(1.0)(Date 类型值)设置，命中则不发起请求，直接调用磁盘缓存。优先级 cache-control > expires。")]),t._v(" "),e("h4",{attrs:{id:"协商缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[t._v("#")]),t._v(" 协商缓存")]),t._v(" "),e("p",[t._v("服务端通过 last-modified/if-modified-since(Date 类型值)组合或者 etag/if-none-match(资源码)组合来判断，前者是服务端设置，后者是客户端请求携带。优先级 ETag > Last-Modified。")]),t._v(" "),e("h4",{attrs:{id:"其他缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他缓存"}},[t._v("#")]),t._v(" 其他缓存")]),t._v(" "),e("p",[t._v("pragma(1.0)，只有一个唯一值 no-cache。优先级 pragma > cache-control。")]),t._v(" "),e("h4",{attrs:{id:"用户行为"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#用户行为"}},[t._v("#")]),t._v(" 用户行为")]),t._v(" "),e("p",[t._v("我们可以把刷新/访问界面的手段分成三类：")]),t._v(" "),e("ul",[e("li",[t._v("在 URI 输入栏中输入然后回车/通过书签访问/location.href。会通过 Expires 或者 Cache-Control 判断是否过期，未过期则不发送请求，使用缓存，返回 200")]),t._v(" "),e("li",[t._v("F5/点击工具栏中的刷新按钮/右键菜单重新加载。始终会发送一个请求，并带上 etag 或者 last-modified 的值，以此来决定是否使用缓存（命中就返回 304）。")]),t._v(" "),e("li",[t._v("Ctl+F5。彻底拿一份新资源。")])]),t._v(" "),e("h3",{attrs:{id:"_3-tcp-连接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-tcp-连接"}},[t._v("#")]),t._v(" 3. TCP 连接")]),t._v(" "),e("ul",[e("li",[t._v("在 http/1.0 中，官方不支持持久连接，需要双端支持并指定头"),e("code",[t._v("connection: Keep-Alive")]),t._v("。")]),t._v(" "),e("li",[t._v("在 http/1.1 中，支持持久连接，但一个 TCP 连接一个时刻只能处理一个 http 请求，不过多个 http 请求可以复用这次连接。")]),t._v(" "),e("li",[t._v("在 http/2.0 中，一个 TCP 就可以同时处理多个 http 请求，名为 Multiplexing。")]),t._v(" "),e("li",[t._v("不同浏览器对 TCP 连接的数量限制不一样，chrome/6，safari/6，firefox/32。")])]),t._v(" "),e("h4",{attrs:{id:"建立，三次-🤝"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#建立，三次-🤝"}},[t._v("#")]),t._v(" 建立，三次 🤝")]),t._v(" "),e("p",[t._v("TCP 是可靠连接，主要靠序号（sequence number）和确认号（acknowledgement number）来保证信息的完整、有序和无差错。")]),t._v(" "),e("p",[t._v("TCP 首部如下：\n"),e("img",{attrs:{src:s(204),alt:""}})]),t._v(" "),e("p",[t._v("握手中有两个常用的动作：")]),t._v(" "),e("ul",[e("li",[t._v("ACK=1，表示设置"),e("strong",[t._v("标志位 ACK")]),t._v("为 1（注意与确认号 ack 的区别）。")]),t._v(" "),e("li",[t._v("ack=x+1，表示设置"),e("strong",[t._v("数据域确认号")]),t._v("的值为 x+1。")])]),t._v(" "),e("blockquote",[e("p",[t._v("TCP规定，SYN=1的报文段不能携带数据（指TCP数据部分），且会消耗掉一个序号（下次必须使用另外的序号了，比如x+1）。")])]),t._v(" "),e("p",[t._v("最终，建立连接的握手流程如下（x，y 为各自的初始序号）：")]),t._v(" "),e("ol",[e("li",[t._v("C ----(SYN=1，seq=x)----\x3e S")]),t._v(" "),e("li",[t._v("C <----(SYN=1，ACK=1，seq=y，ack=x+1)---- S")]),t._v(" "),e("li",[t._v("C ----(ACK=1，seq=x+1，ack=y+1)----\x3e S")])]),t._v(" "),e("h4",{attrs:{id:"交流数据，两次-🤝"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#交流数据，两次-🤝"}},[t._v("#")]),t._v(" 交流数据，两次 🤝")]),t._v(" "),e("ul",[e("li",[t._v("C ----(ACK=1，seq=x+1，ack=y+1)----\x3e S")]),t._v(" "),e("li",[t._v("C <----(ACK=1，ack=x+2)---- S")])]),t._v(" "),e("h4",{attrs:{id:"断开，四次-🤝"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#断开，四次-🤝"}},[t._v("#")]),t._v(" 断开，四次 🤝")]),t._v(" "),e("ul",[e("li",[t._v("C ----(FIN=1，seq=u)----\x3e S")]),t._v(" "),e("li",[t._v("C <----(ACK=1，seq=v，ack=u+1)---- S")]),t._v(" "),e("li",[t._v("C <----(FIN=1，ACK=1，seq=w，ack=u+1)---- S")]),t._v(" "),e("li",[t._v("C ----(ACK=1，seq=u+1，ack=w+1)----\x3e S")])]),t._v(" "),e("h3",{attrs:{id:"_4-渲染"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-渲染"}},[t._v("#")]),t._v(" 4. 渲染")]),t._v(" "),e("p",[t._v("浏览器内核，一个 tab 页，代表一个进程，它又拥有多个线程。")]),t._v(" "),e("ul",[e("li",[t._v("GUI 渲染线程")]),t._v(" "),e("li",[t._v("js 引擎线程")]),t._v(" "),e("li",[t._v("事件触发线程（ok 后放入 js 引擎的执行队列）")]),t._v(" "),e("li",[t._v("定时触发线程（ok 后通知事件触发线程）")]),t._v(" "),e("li",[t._v("异步 HTTP 请求线程（ok 后通知事件触发线程）")])]),t._v(" "),e("p",[t._v("渲染过程：")]),t._v(" "),e("ul",[e("li",[t._v("HTML -> DOM")]),t._v(" "),e("li",[t._v("CSS -> CSSOM")]),t._v(" "),e("li",[t._v("DOM + CSSOM -> Render Tree\n"),e("blockquote",[e("p",[t._v("Render Tree 跟 DOM Tree 并不是一一对应，比如 head 节点和 display:none 的节点")])])]),t._v(" "),e("li",[t._v("重排/回流（reflow），计算节点的几何信息（位置、大小）")]),t._v(" "),e("li",[t._v("重绘（repaint），转化为屏幕的实际像素")])]),t._v(" "),e("p",[t._v("重排代价太多，所以浏览器使用队列栈来减少消耗。因此获取几何信息时，会强制清空栈而触发重排操作。")]),t._v(" "),e("h2",{attrs:{id:"web-安全"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#web-安全"}},[t._v("#")]),t._v(" WEB 安全")]),t._v(" "),e("h3",{attrs:{id:"同源策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#同源策略"}},[t._v("#")]),t._v(" 同源策略")]),t._v(" "),e("p",[t._v("浏览器拥有严格的同源策略（协议、域名、端口必须全部相同），不同源的交互就会受到限制。")]),t._v(" "),e("h4",{attrs:{id:"解决办法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决办法"}},[t._v("#")]),t._v(" 解决办法")]),t._v(" "),e("p",[t._v("一般的交互，我们分为 dom 获取、cookie 获取以及事件。")]),t._v(" "),e("ul",[e("li",[t._v("dom 获取：设置 document.domain\n"),e("blockquote",[e("p",[t._v("domain 的值只能设置为当前域或父域,且不能设置协议与端口，且是交互的双方同时设置。")])])]),t._v(" "),e("li",[t._v("cookie 获取：设置 cookie 的 domain 属性\n"),e("blockquote",[e("p",[t._v("cookie 的 sameSite 属性分为三个值：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("Strict")]),t._v(" 非同源不发送 cookie。")]),t._v(" "),e("li",[e("code",[t._v("Lax")]),t._v(" get 请求发送，post 不发送，img 与 script 标签不发送。")]),t._v(" "),e("li",[e("code",[t._v("None")]),t._v(" 都发送")])])])]),t._v(" "),e("li",[t._v("事件：使用 window.postMessage")])]),t._v(" "),e("p",[t._v("如果是要获取数据，可以使用：")]),t._v(" "),e("ol",[e("li",[t._v("JSONP")]),t._v(" "),e("li",[t._v("CORS")]),t._v(" "),e("li",[t._v("nginx 反向代理")])]),t._v(" "),e("p",[t._v("TODO: 待实践验证")]),t._v(" "),e("h3",{attrs:{id:"常见"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常见"}},[t._v("#")]),t._v(" 常见")]),t._v(" "),e("h3",{attrs:{id:"xss-跨站脚本（cross-site-scripting）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#xss-跨站脚本（cross-site-scripting）"}},[t._v("#")]),t._v(" XSS 跨站脚本（Cross Site Scripting）")]),t._v(" "),e("p",[t._v("分为以下几类：")]),t._v(" "),e("ul",[e("li",[t._v("存储型：input 区域输入恶意代码进入数据库，下次用户打开加载脚本。")]),t._v(" "),e("li",[t._v("反射型：给个链接诱骗点击，加载恶意服务器的恶意代码")]),t._v(" "),e("li",[t._v("基于 DOM 型：运行时才能发现，通过更改 dom 来加载恶意代码")])]),t._v(" "),e("p",[t._v("预防：")]),t._v(" "),e("ul",[e("li",[t._v("设置 cookie 为 httponly")]),t._v(" "),e("li",[t._v("过滤输入输出")]),t._v(" "),e("li",[t._v("设置 CSP")])]),t._v(" "),e("h3",{attrs:{id:"csrf-跨站请求伪造（cross-site-request-forgery）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#csrf-跨站请求伪造（cross-site-request-forgery）"}},[t._v("#")]),t._v(" CSRF 跨站请求伪造（Cross site request forgery）")]),t._v(" "),e("p",[t._v("预防：")]),t._v(" "),e("ul",[e("li",[t._v("设置 cookie 的 sameSite 属性")]),t._v(" "),e("li",[t._v("接口验证来源")])]),t._v(" "),e("h3",{attrs:{id:"sql-注入"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sql-注入"}},[t._v("#")]),t._v(" SQL 注入")]),t._v(" "),e("h3",{attrs:{id:"点击劫持"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#点击劫持"}},[t._v("#")]),t._v(" 点击劫持")]),t._v(" "),e("p",[t._v("预防：")]),t._v(" "),e("ul",[e("li",[t._v("设置 X-Frame-Options，方式第三方加载 iframe 嵌套")])]),t._v(" "),e("h3",{attrs:{id:"ddos，拒绝服务攻击。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ddos，拒绝服务攻击。"}},[t._v("#")]),t._v(" DDoS，拒绝服务攻击。")]),t._v(" "),e("h2",{attrs:{id:"常见项目优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常见项目优化"}},[t._v("#")]),t._v(" 常见项目优化")]),t._v(" "),e("ul",[e("li",[t._v("常用第三方库用 cdn 引入（公司专用最好），使用 webpack 的 externals 动态引入。")]),t._v(" "),e("li",[t._v("gzip 压缩。打包时生成.gz 文件，方便 nginx 服务器直接返回文件，无需利用 cpu 计算。")]),t._v(" "),e("li",[t._v("preload 预加载首屏需要图片")]),t._v(" "),e("li",[t._v("dns-prefetch 预解析需要跨域的 dns")]),t._v(" "),e("li",[t._v("首屏使用动画，提前渲染，减少用户的焦虑感")]),t._v(" "),e("li",[t._v("moment.js 改为使用 day.js")]),t._v(" "),e("li",[t._v("图片懒加载。")])]),t._v(" "),e("ol",[e("li",[t._v("在 scroll 事件里处理（根据 getBoundingClientRect 接口获取 top 与 scrollTop 比对），需要注意几点（事件函数节流，首次先运行一次，滚动完毕移除事件）")]),t._v(" "),e("li",[t._v("或者使用 IntersectionObserver 构造函数管擦判断是否加载图片")]),t._v(" "),e("li",[t._v("使用 vue-lazyload 插件")])]),t._v(" "),e("ul",[e("li",[t._v("图片使用.webp 格式，为了兼容不使用的环境，使用 picture 标签来设定一层层的兼容")]),t._v(" "),e("li",[t._v("减少 DOM 操作。避免获取视图信息（getBoundingClientRect,clientWidth,offsetWidth）,因为它会立即更新浏览器重排/重绘维护的队列。高频事件防抖节流。")]),t._v(" "),e("li",[t._v("打包优化，使用 DllPlugin 分离第三方类库，使用 add-asset-html-webpack-plugin 来注入到 index.html 中")])]),t._v(" "),e("h2",{attrs:{id:"http-状态码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-状态码"}},[t._v("#")]),t._v(" HTTP 状态码")]),t._v(" "),e("ul",[e("li",[t._v("301，永久重定向。浏览器会更新缓存，下次直接到新的页面；SEO 会转移相应旧站的流量排名到新站，但是内容一定要高度一致，不然视为黑帽 SEO。")]),t._v(" "),e("li",[t._v("302，临时重定向")])]),t._v(" "),e("h2",{attrs:{id:"cors（跨域资源共享）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cors（跨域资源共享）"}},[t._v("#")]),t._v(" CORS（跨域资源共享）")]),t._v(" "),e("p",[t._v("根据 method 与 request header 决定是 simple request 还是 not-so-simple request。")]),t._v(" "),e("h3",{attrs:{id:"simple-request"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#simple-request"}},[t._v("#")]),t._v(" simple request")]),t._v(" "),e("ul",[e("li",[t._v("method: PUT、GET、POSAT")]),t._v(" "),e("li",[t._v("header: 基本字段，注意 content-type 只允许 application/x-www-form-urlencoded、multipart/form-data、text/plain，"),e("strong",[t._v("也就是 json 参数是算 not-so-simple request")]),t._v("。")])]),t._v(" "),e("p",[t._v("处理方法为浏览器自动带上 origin 字段，服务器进行逻辑判断，给出 response。")]),t._v(" "),e("p",[t._v("如果允许，服务器在 response header 中设置"),e("code",[t._v("Access-Control-Allow-Origin: *")]),t._v("，或者为 origin 的值。")]),t._v(" "),e("p",[t._v("如果不允许，正常返回信息与头，浏览器判断没有相应的头，自动识别请求失败。")]),t._v(" "),e("p",[t._v("如果还需要发送 Cookie，需要双方操作，浏览器需要在 ajax 中设置"),e("code",[t._v("withCredential = true")]),t._v("，服务器在 response header 中设置，"),e("code",[t._v("Access-Control-Allow-Credentials: true")]),t._v("。"),e("strong",[t._v("另外"),e("code",[t._v("Access-Control-Allow-Origin")]),t._v("这时就不能返回*了，必须为明确的地址。")])]),t._v(" "),e("h3",{attrs:{id:"not-so-simple-request"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#not-so-simple-request"}},[t._v("#")]),t._v(" not-so-simple request")]),t._v(" "),e("p",[t._v("会在请求之前发送一次 method 为"),e("code",[t._v("OPTIONS")]),t._v("的“预检”请求。判断逻辑同 simple request。")]),t._v(" "),e("p",[t._v("但是 request header 会有两个特殊字段：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("Access-Control-Request-Method")]),t._v("，包含 cors 会用到的方法。")]),t._v(" "),e("li",[e("code",[t._v("Access-Control-Request-Headers")]),t._v("，一个以逗号分隔的字符串，包含 cors 会额外发送的头信息字段，"),e("strong",[t._v("如果浏览器发送了这个字段，那么服务器也必须按返回相应的"),e("code",[t._v("Access-Control-Allow-Headers")]),t._v("字段，否则预检失败。")])])]),t._v(" "),e("p",[t._v("预检请求只发一次，后面的 not-so-simple request 当做 simple request 请求处理，因为服务器可以在第一次预检请求的 response header 中设置"),e("code",[t._v("Access-Control-Max-Age")]),t._v("。")])])}),[],!1,null,null,null);a.default=r.exports}}]);
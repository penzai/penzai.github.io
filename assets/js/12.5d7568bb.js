(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{214:function(n,t,s){"use strict";s.r(t);var a=s(0),e=Object(a.a)({},(function(){var n=this,t=n.$createElement,s=n._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h2",{attrs:{id:"nginx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[n._v("#")]),n._v(" Nginx")]),n._v(" "),s("h3",{attrs:{id:"常用配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用配置"}},[n._v("#")]),n._v(" 常用配置")]),n._v(" "),s("ul",[s("li",[n._v("配置文件： /etc/nginx/nginx.conf 副配置 /etc/nginx/conf.d/*.conf")]),n._v(" "),s("li",[n._v("开启 $ systemctl start nginx")]),n._v(" "),s("li",[n._v("重启 $ nginx -s reload")]),n._v(" "),s("li",[n._v("关闭 $ nginx -s stop")]),n._v(" "),s("li",[n._v("查看日志文件 $ tail -f /usr/local/nginx/logs/access.log")]),n._v(" "),s("li",[n._v("简单配置")])]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("server {\n  server_name 118.24.23.200;\n  root /data/test-nginx;\n  index index.html;\n  location / {\n  # 这里不配置root就返回默认的\n  }\n  # 设置静态图片\n  location ^~ /static/ {\n    root /data/test-nginx\n  }\n  # 设置上传图片地址转发\n  location ^~ .*\\.(gif|jpg|jpeg|png)$ {\n    proxy_pass 转发的地址\n  }\n}\n")])])]),s("ul",[s("li",[n._v("crm 配置示例\n"),s("blockquote",[s("p",[n._v("nginx 要使用下划线获取信息需要在 http 或者 server 中开启，即设置：")])])])]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("underscores_in_headers on;\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("server {\n  listen       5858;\n  client_max_body_size 10M\n  root /www/kyhs-crm;\n  location ~ .*\\.(gif|jpg|jpeg|png|mp4|avi|mkv|wmv|flv|3gp|pdf|doc|docx)$ {\n    proxy_pass http://192.168.3.25:8088;\n  }\n\n  location ^~ /static/ {\n    root /www/kyhs-crm;\n  }\n\n  location /api {\n    proxy_pass http://192.168.3.25:9004;\n    proxy_set_header K_Security_Token $http_K_Security_Token;\n }\n")])])]),s("ul",[s("li",[n._v("配置 ssl")])]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("server {\n    listen 80;\n    # 启用ssl模块\n    listen 443 ssl;\n    server_name www.cloudwutong.com;\n    root /www/home;\n    # 设置证书和密钥\n    ssl_certificate /usr/local/www.cloudwutong.com/Nginx/1_www.cloudwutong.com_bundle.crt;\n    ssl_certificate_key /usr/local/www.cloudwutong.com/Nginx/2_www.cloudwutong.com.key;\n    location /findAllActivityInfo  {\n            proxy_pass http://118.24.13.46:7001;\n    }\n    location /findActivityInfo  {\n            proxy_pass http://118.24.13.46:7001;\n    }\n    location ~ .*\\.(git|jpg|jpeg|png)$ {\n            root /usr/local/photos;\n    }\n}\n")])])]),s("ul",[s("li",[n._v("多个机器提供服务")])]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("## 下面放在http的括号内，作为第一层\nupstream test.online {\n    server 120.11.11.11:8080 weight=1;\n    server 120.11.11.12:8080 weight=1;\n}\n\nlocation ^~ /webs {\n      proxy_pass http://test.online;\n      proxy_redirect default;\n}\n")])])]),s("h2",{attrs:{id:"配置-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置-api"}},[n._v("#")]),n._v(" 配置 api")]),n._v(" "),s("h3",{attrs:{id:"目录转发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#目录转发"}},[n._v("#")]),n._v(" 目录转发")]),n._v(" "),s("ul",[s("li",[n._v("root 直接导向目录带上 uri")]),n._v(" "),s("li",[n._v("alias 用于重写")])]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("# 同时请求\blist.html\n\n# 导向 /www/web1/a/list.html\nlocation /a {\n    root /www/web1;\n}\n# 导向 /www/web2/list.html\nlocation /a {\n    alias /www/web2:\n}\n")])])]),s("h3",{attrs:{id:"架构简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#架构简介"}},[n._v("#")]),n._v(" 架构简介")]),n._v(" "),s("p",[n._v("主线程 master（管理 worker 进程，接收外界信号）\nworkder 进程（实际执行的进程）")]),n._v(" "),s("h3",{attrs:{id:"设置跨域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设置跨域"}},[n._v("#")]),n._v(" 设置跨域")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("add_header Access-Control-Allow-Origin *;\nadd_header Access-Control-Allow-Headers X-Requested-With;\nadd_header Access-Control-Allow-Methods GET,POST,OPTIONS;\n")])])]),s("h3",{attrs:{id:"路由规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由规则"}},[n._v("#")]),n._v(" 路由规则")]),n._v(" "),s("ul",[s("li",[s("code",[n._v("=")]),n._v(" 精确匹配")]),n._v(" "),s("li",[s("code",[n._v("^~")]),n._v(" 匹配字符串路径开头（非 RegExp)")]),n._v(" "),s("li",[s("code",[n._v("~")]),n._v("、"),s("code",[n._v("!~")]),n._v("、"),s("code",[n._v("~*")]),n._v(" 正则表达式匹配")]),n._v(" "),s("li",[s("code",[n._v("/")]),n._v(" 通用匹配")])]),n._v(" "),s("blockquote",[s("p",[n._v("设置代理时，是否添加"),s("code",[n._v("/")]),n._v("决定是否带上匹配路径。")])]),n._v(" "),s("h2",{attrs:{id:"centos-6-9-安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#centos-6-9-安装"}},[n._v("#")]),n._v(" centos 6.9 安装")]),n._v(" "),s("h3",{attrs:{id:"依赖"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#依赖"}},[n._v("#")]),n._v(" 依赖")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("yum -y install gcc\nyum -y install pcre-devel\nyum -y install zlib zlib-devel\nyum -y install openssl openssl-devel\n")])])]),s("h3",{attrs:{id:"下载包，解压"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#下载包，解压"}},[n._v("#")]),n._v(" 下载包，解压")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("wget http://nginx.org/download/nginx-1.12.2.tar.gz\ntar -xzvf nginx-1.12.2\nmv nginx-1.12.2 /usr/local/dev/\n")])])]),s("h3",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[n._v("#")]),n._v(" 安装")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("cd /usr/local/dev/nginx-1.12.2\n\n./configure --with-http_ssl_module\n(建议安装ssl模块用于https)\n# 编译 并 安装\nmake\nmake install\n\n# 查看nginx安装到哪里\nwhereis nginx\n\n# 默认安装到这里\n/usr/local/nginx/sbin/nginx\n")])])]),s("h3",{attrs:{id:"开机自启"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开机自启"}},[n._v("#")]),n._v(" 开机自启")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("vim /etc/rc.d/rc.local\n\n# nginx 启动\n/usr/local/nginx/sbin/nginx\n\n# 赋予执行权限\nchmod 755 /etc/rc.d/rc.local\n")])])]),s("h3",{attrs:{id:"快速启动脚本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#快速启动脚本"}},[n._v("#")]),n._v(" 快速启动脚本")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('#!/bin/sh\n#\n# nginx - this script starts and stops the nginx daemon\n#\n# chkconfig: - 85 15\n# description: Nginx is an HTTP(S) server, HTTP(S) reverse \\\n#   proxy and IMAP/POP3 proxy server\n# processname: nginx\n# config: /etc/nginx/nginx.conf\n# config: /etc/sysconfig/nginx\n# pidfile: /var/run/nginx.pid\n# Source function library.\n. /etc/rc.d/init.d/functions\n# Source networking configuration.\n. /etc/sysconfig/network\n# Check that networking is up.\n[ "$NETWORKING" = "no" ] && exit 0\n    nginx="/usr/local/nginx/sbin/nginx"\n    prog=$(basename $nginx)\n    NGINX_CONF_FILE="/usr/local/nginx/conf/nginx.conf"\n[ -f /etc/sysconfig/nginx ] && . /etc/sysconfig/nginx\n    lockfile=/var/lock/subsys/nginx\n\nstart() {\n    [ -x $nginx ] || exit 5\n    [ -f $NGINX_CONF_FILE ] || exit 6\n    echo -n $"Starting $prog: "\n    daemon $nginx -c $NGINX_CONF_FILE\n    retval=$?\n    echo\n[ $retval -eq 0 ] && touch $lockfile\n    return $retval\n}\n\nstop() {\n    echo -n $"Stopping $prog: "\n    killproc $prog -QUIT\n    retval=$?\n    echo\n[ $retval -eq 0 ] && rm -f $lockfile\n    return $retval\n    killall -9 nginx\n}\n\nrestart() {\n    configtest || return $?\n    stop\n    sleep 1\n    start\n}\n\nreload() {\n    configtest || return $?\n    echo -n $"Reloading $prog: "\n    killproc $nginx -HUP\n    RETVAL=$?\n    echo\n}\n\nforce_reload() {\n    restart\n}\n\nconfigtest() {\n    $nginx -t -c $NGINX_CONF_FILE\n}\n\nrh_status() {\n    status $prog\n}\n\nrh_status_q() {\n    rh_status >/dev/null 2>&1\n}\n\ncase "$1" in\n    start)\n        rh_status_q && exit 0\n        $1\n    ;;\n    stop)\n        rh_status_q || exit 0\n        $1\n    ;;\n    restart|configtest)\n        $1\n    ;;\n    reload)\n        rh_status_q || exit 7\n        $1\n    ;;\n    force-reload)\n        force_reload\n    ;;\n    status)\n        rh_status\n    ;;\n    condrestart|try-restart)\n        rh_status_q || exit 0\n    ;;\n    *)\n        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest}"\n        exit 2\nesac\n')])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("# 1、将上面代码写到 nginx 文件中\nvim /usr/bin/nginx\n\n# 2、添加执行权限\nchmod 755 nginx\n\n# 3、可以在任意目录下使用 nginx start|stop|status|restart|…\nnginx start\nnginx stop\nnginx status\nnginx restart\n…\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);